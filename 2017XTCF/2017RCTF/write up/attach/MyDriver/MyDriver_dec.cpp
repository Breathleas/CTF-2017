#include <iostream>
using namespace std;

char g_xxx[128] = "\x95\x13\x6E\x5C\xA2\x13\x58\x5C\xB3\x13\x54\x5C\x88\x13\x54\x5C\x9A\x13\x57\x5C\xA9\x13\x50\x5C\xA2\x13\x6E\x5C\xF7\x13\x02\x5C\xF6\x13\x1F\x5C\xB1\x13\x49\x5C\xB1\x13";

uint8_t g_yyy[] = "\x70\x74\x37\x65\x47\x66\x05\x61\x11\x20\x0C\x73\x6D\x41\x3A\x73\x36\x6D\x16\x6C\x09\x5F\x28\x6E\x0B\x69\x31\x65\x6D\x68\x5C\x6F\x58\x5F\x6A\x72\x02\x00\x78\x00\x74\x00\x50\x00\x5F\x00\x67\x00\x69\x00\x76\x00\x65\x00\x4D\x00\x65\x00\x5F\x00\x66\x00\x6C\x00\x61\x00\x67\x00\x5F\x00\x32\x00\x33\x00\x33\x00\x2E\x00\x74\x00\x78\x00\x74\x00\x50\x00\x5F\x00\x67\x00\x69\x00\x76\x00\x65\x00\x4D\x00\x65\x00\x5F\x00\x66\x00\x6C\x00\x61\x00\x67\x00\x5F\x00\x32\x00\x33\x00\x33\x00\x2E\x00\x74\x00\x78\x00\x74\x00\x50\x00";

uint64_t DecryptXor(uint64_t a1, uint64_t a2) {
  return (a2 & 0xF0F0F0F0F0F0F0F0u) ^ (a1 & 0xF0F0F0F0F0F0F0Fu);
}

int main() {
  auto key_xxx = DecryptXor(0xCCC12345, 0x54321CCC);
  auto xxx_len = key_xxx - 0x5C31139B;

  auto ptr = reinterpret_cast<uint32_t *>(g_xxx);
  for (int i = 0; i < 128/4; ++i) {
    *(ptr++) ^= key_xxx;
  }
  g_xxx[100] = 0;
  for (auto i = 0u; i < xxx_len; ++i) printf("%c", g_xxx[i]);

  printf("\nlen = %lx\n", xxx_len);

  int i = 0, j = 0;
  do {
    printf("D %x %x\n", g_yyy[0], g_xxx[j]);
    g_yyy[i] ^= *((uint8_t *)g_xxx + j);
    ++i;
    j = (j + 1) % xxx_len;
  } while (i < 128);
  for (auto c : g_yyy) printf("%c", c);

  return 0;
}
